!iflang [english]

!begin_node x_fsel_input

(!begin_liste) [Availability]

!item [Name:]
ØExtended file selectorÆ

!item [Opcode:]
28960

!item [Syntax:]
int16_t x_fsel_input( int8_t *inpath, int16_t pathlen, int8_t *files, int16_t sels,
int16_t *exbutton, int8_t *label );

!item [Description:]
!begin_xlist !compressed [exbutton]
!item [Parameter]
Meaning
!item [~]
~
!item [inpath]
Pointer to the path (with wildcards) to start selection at
!item [pathlen]
Maximum length (incl. null) of inpath
!item [files]
Pointer to the string containing the default filename to be displayed. Also,
holds up to "sels" filenames (each null-terminated) upon return.
!item [sels]
Maximum number of items that can be selected upon return from the call
!item [exbutton]
Exit button:
!begin_table [l l l]
0 !! = !! 'Cancel' was selected
1 !! = !! 'OK' was selected
!end_table
!item [label]
A label of up to 30 characters, which will appear at the top of the item selector.
!end_xlist

This function is similar to fsel_exinput, but has several extensions:
!begin_itemize !compressed
!item The (!I)inpath(!i) parameter can contain not only the traditional * and ?
     wildcards, but can also contain regular expressions using [] and {}:
  !begin_itemize !compressed
    !item Any characters contained between square brackets ("[]") define a
          list of acceptable characters to substitute into that one
          position. This can either be individual characters, like
          "[ABCD]", a range separated by a hyphen like "[A-D]", or a (!nolink [mix])
          of the two, like "[A-DXYZ]".
    !item A list of words contained within curly brackets ("{}") defines
          one or more acceptable values. The values must be separated by
          commas.
  !end_itemize

!item The (!I)pathlen(!i) parameter defines the maximum length of inpath. If the
     user adds too many extensions or the path otherwise grows too long,
     an error alert will appear.
!item Upon successful return, files can contain up to sels filenames. Each
     name in the list is followed by a NULL character (ASCII 0) and the
     last filename is followed by a final NULL. The exception to this rule
     is when sels is one, in which case the final NULL is not used; For
     all other cases, the area pointed to by files must be at least (13 *
     sels)+1 bytes long.
!end_itemize

!item [(!nolink [Return]) value:]
0 = An error occurred

!item [Availability:]
The function is only available under Geneva.

!item [Group:]
File-selector library

!item [See also:]
(!link [Binding] [Bindings for x_fsel_input])

(!ende_liste)



!begin_node Bindings for x_fsel_input
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_fsel_input( int8_t *inpath, int16_t pathlen, int8_t *files, int16_t sels,
int16_t *exbutton, int8_t *label );

!item [Binding:]
!begin_verbatim
int16_t x_fsel_input( int8_t *inpath, int16_t pathlen, int8_t
*files, int16_t sels, int16_t *exbutton, int8_t *label )
{
   int_in[0] = pathlen;
   int_in[1] = sels;

   addr_in[0] = inpath;
   addr_in[1] = files;
   addr_in[2] = label;

   crys_if(28960);

   *exbutton = int_out[1];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 28960 # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 2     # Entry in int_out
control+6 !! control[3] !! 3     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! pathlen
int_in+2  !! int_in[1]  !! sels
addr_in   !! addr_in[0] !! inpath
addr_in+4 !! addr_in[1] !! files
addr_in+8 !! addr_in[2] !! label
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! exbutton
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node x_fsel_input

(!begin_liste) [Beschreibung]

!item [Name:]
ØExtended file selectorÆ

!item [AES-Nummer:]
28960

!item [Deklaration:]
int16_t x_fsel_input( int8_t *inpath, int16_t pathlen, int8_t *files, int16_t sels,
int16_t *exbutton, int8_t *label );

!item [Beschreibung:]
!begin_xlist !compressed [exbutton]
!item [Parameter]
Bedeutung
!item [~]
~
!item [inpath]
Pointer to the path (with wildcards) to start selection at
!item [pathlen]
Maximum length (incl. null) of inpath
!item [files]
Pointer to the string containing the default filename to be displayed. Also,
holds up to "sels" filenames (each null-terminated) upon return.
!item [sels]
Maximum number of items that can be selected upon return from the call
!item [exbutton]
Exit Button:
!begin_table [l l l]
0 !! = !! es wurde Abbruch gewÑhlt
1 !! = !! es wurde Ok gewÑhlt
!end_table
!item [label]
A label of up to 30 characters, which will appear at the top of the item selector.
!end_xlist

This function is similar to fsel_exinput, but has several extensions:
!begin_itemize !compressed
!item The (!I)inpath(!i) parameter can contain not only the traditional * and ?
     wildcards, but can also contain regular expressions using [] and {}:
!begin_itemize !compressed
        !item Any characters contained between square brackets ("[]") define a
          list of acceptable characters to substitute into that one
          position. This can either be individual characters, like
          "[ABCD]", a range separated by a hyphen like "[A-D]", or a (!nolink [mix])
          of the two, like "[A-DXYZ]".
        !item A list of words contained within curly brackets ("{}") defines
          one or more acceptable values. The values must be separated by
          commas.
!end_itemize

!item The (!I)pathlen(!i) parameter defines the maximum length of inpath. If the
     user adds too many extensions or the path otherwise grows too long,
     an error alert will appear.
!item Upon successful return, files can contain up to sels filenames. Each
     name in the list is followed by a NULL character (ASCII 0) and the
     last filename is followed by a final NULL. The exception to this rule
     is when sels is one, in which case the final NULL is not used; For
     all other cases, the area pointed to by files must be at least (13 *
     sels)+1 bytes long.
!end_itemize

!item [Ergebnis:]
0 = Ein Fehler ist aufgetreten.

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva zur VerfÅgung.

!item [Gruppe:]
Dateiauswahl

!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_fsel_input])

(!ende_liste)



!begin_node Bindings fÅr x_fsel_input
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_fsel_input( int8_t *inpath, int16_t pathlen, int8_t *files, int16_t sels,
int16_t *exbutton, int8_t *label );

!item [Umsetzung:]
!begin_verbatim
int16_t x_fsel_input( int8_t *inpath, int16_t pathlen, int8_t
*files, int16_t sels, int16_t *exbutton, int8_t *label )
{
   int_in[0] = pathlen;
   int_in[1] = sels;

   addr_in[0] = inpath;
   addr_in[1] = files;
   addr_in[2] = label;

   crys_if(28960);

   *exbutton = int_out[1];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 28960 # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 2     # EintrÑge in int_out
control+6 !! control[3] !! 3     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! pathlen
int_in+2  !! int_in[1]  !! sels
addr_in   !! addr_in[0] !! inpath
addr_in+4 !! addr_in[1] !! files
addr_in+8 !! addr_in[2] !! label
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! exbutton
!end_table

(!ende_liste)
!end_node
!end_node

!endif
