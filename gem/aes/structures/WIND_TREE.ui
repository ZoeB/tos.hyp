!iflang [english]

!begin_node WIND_TREE

!begin_verbatim
typedef struct WindTree
{
  int16_t handle;
  int16_t count;
  int16_t flag;
  OBJECT *tree;
} WIND_TREE;
!end_verbatim

!label X_WTFL_RESIZE
!label X_WTFL_CLICKS
!label X_WTFL_SLIDERS
!begin_xlist !compressed [flag]
!item [Parameter]
Meaning
!item [(!I)flag(!i)]
!begin_xlist !compressed
!item [Bit 0:] 
Auto resize (X_WTFL_RESIZE=1)
!item [Bit 1:] 
Process clicks (X_WTFL_CLICKS=2)
!item [Bit 2:] 
Resize sliders, info (X_WTFL_SLIDERS=4)
!end_xlist
!end_xlist

See also:
x_wind_tree
!end_node

!else

!begin_node WIND_TREE

!begin_verbatim
typedef struct WindTree
{
  int16_t handle;
  int16_t count;
  int16_t flag;
  OBJECT *tree;
} WIND_TREE;
!end_verbatim

!label X_WTFL_RESIZE
!label X_WTFL_CLICKS
!label X_WTFL_SLIDERS
!begin_xlist !compressed [flag]
!item [Parameter]
Meaning
!item [(!I)flag(!i)]
!begin_xlist !compressed
!item [Bit 0:] 
Auto resize (X_WTFL_RESIZE=1)
!item [Bit 1:] 
Process clicks (X_WTFL_CLICKS=2)
!item [Bit 2:] 
Resize sliders, info (X_WTFL_SLIDERS=4)
!end_xlist
!end_xlist

Querverweis:
x_wind_tree
!end_node

!endif
