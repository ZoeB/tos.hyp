!iflang [english]

!begin_node x_form_mouse

(!begin_liste) [Availability]

!item [Name:]
ØXForm mouseÆ - Handle mouse clicks in a dialog, including editable cursor movement.

!item [Opcode:]
28997

!item [Syntax:]
int16_t x_form_mouse( OBJECT *tree, int16_t mouse_x, int16_t mouse_y, int16_t clicks, 
int16_t *edit_obj, int16_t *next_obj, int16_t *edit_idx );

!item [Description:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [tree]
Object tree of the dialog
!item [mouse_x]
X coordinate of the mouse pointer
!item [mouse_y]
Y coordinate of the mouse pointer
!item [clicks]
Number of clicks to be processed
!item [edit_obj]
Object currently having the edit cursor
!item [next_obj]
Object selected with the mouse
!item [edit_idx]
Position of edit cursor within field
!end_xlist

This function begins by calling form_button. If neither an EXIT nor a
TOUCHEXIT button is selected, and the object is EDITABLE, then the
editable cursor is moved to the character within the editable field which
is under the mouse pointer.

!item [(!nolink [Return]) value:]
0 = An object was selected (!nl)
1 = No object

!begin_xlist !compressed [edit_obj]
!item [Parameter]
Meaning
!item [edit_obj]
New object having the edit cursor
!item [next_obj]
Selected object, or 0 for none
!item [edit_idx]
New edit cursor position
!end_xlist

!item [Availability:]
The function is only available under Geneva.

!item [Group:]
Form library

!item [See also:]
(!link [Binding] [Bindings for x_form_mouse])

(!ende_liste)



!begin_node Bindings for x_form_mouse
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_form_mouse( OBJECT *tree, int16_t mouse_x, int16_t mouse_y, int16_t clicks, 
int16_t *edit_obj, int16_t *next_obj, int16_t *edit_idx );

!item [Binding:]
!begin_verbatim
int16_t x_form_mouse( OBJECT *tree, int16_t mouse_x, int16_t
mouse_y, int16_t clicks, int16_t *edit_obj, int16_t *next_obj,
int16_t *edit_idx )
{
   int_in[0] = mouse_x;
   int_in[1] = mouse_y;
   int_in[2] = clicks;
   int_in[3] = edit_obj;
   int_in[4] = next_obj;
   int_in[5] = edit_idx;

   addr_in[0] = tree;

   crys_if(28997);

   *edit_obj = int_out[1];
   *next_obj = int_out[2];
   *edit_idx = int_out[3];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 28997 # Function opcode
control+2 !! control[1] !! 6     # Entry in int_in
control+4 !! control[2] !! 4     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
addr_in   !! addr_in[0] !! tree
int_in    !! int_in[0]  !! mouse_x
int_in+2  !! int_in[1]  !! mouse_y
int_in+4  !! int_in[2]  !! clicks
int_in+6  !! int_in[3]  !! edit_obj
int_in+8  !! int_in[4]  !! next_obj
int_in+10 !! int_in[5]  !! edit_idx
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! edit_obj
int_out+4 !! int_out[2] !! next_obj
int_out+6 !! int_out[3] !! edit_idx
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node x_form_mouse

(!begin_liste) [Beschreibung]

!item [Name:]
ØXForm mouseÆ - Handle mouse clicks in a dialog, including editable cursor movement.

!item [AES-Nummer:]
28997

!item [Deklaration:]
int16_t x_form_mouse( OBJECT *tree, int16_t mouse_x, int16_t mouse_y, int16_t clicks, 
int16_t *edit_obj, int16_t *next_obj, int16_t *edit_idx );

!item [Beschreibung:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [tree]
Object tree of the dialog
!item [mouse_x]
X coordinate of the mouse pointer
!item [mouse_y]
Y coordinate of the mouse pointer
!item [clicks]
Number of clicks to be processed
!item [edit_obj]
Object currently having the edit cursor
!item [next_obj]
Object selected with the mouse
!item [edit_idx]
Position of edit cursor within field
!end_xlist

This function begins by calling form_button. If neither an EXIT nor a
TOUCHEXIT button is selected, and the object is EDITABLE, then the
editable cursor is moved to the character within the editable field which
is under the mouse pointer.

!item [Ergebnis:]
0 = Ein Objekt wurde selektiert (!nl)
1 = Kein Objekt angewÑhlt.

!begin_xlist !compressed [edit_obj]
!item [Parameter]
Bedeutung
!item [edit_obj]
New object having the edit cursor
!item [next_obj]
Selected object, or 0 for none
!item [edit_idx]
New edit cursor position
!end_xlist

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva zur VerfÅgung.

!item [Gruppe:]
(!link [Formulare][Formularfunktionen])

!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_form_mouse])

(!ende_liste)



!begin_node Bindings fÅr x_form_mouse
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_form_mouse( OBJECT *tree, int16_t mouse_x, int16_t mouse_y, int16_t clicks, 
int16_t *edit_obj, int16_t *next_obj, int16_t *edit_idx );

!item [Umsetzung:]
!begin_verbatim
int16_t x_form_mouse( OBJECT *tree, int16_t mouse_x, int16_t
mouse_y, int16_t clicks, int16_t *edit_obj, int16_t *next_obj,
int16_t *edit_idx )
{
   int_in[0] = mouse_x;
   int_in[1] = mouse_y;
   int_in[2] = clicks;
   int_in[3] = edit_obj;
   int_in[4] = next_obj;
   int_in[5] = edit_idx;

   addr_in[0] = tree;

   crys_if(28997);

   *edit_obj = int_out[1];
   *next_obj = int_out[2];
   *edit_idx = int_out[3];

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 28997 # Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 4     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! mouse_x
int_in+2  !! int_in[1]  !! mouse_y
int_in+4  !! int_in[2]  !! clicks
int_in+6  !! int_in[3]  !! edit_obj
int_in+8  !! int_in[4]  !! next_obj
int_in+10 !! int_in[5]  !! edit_idx
int_out   !! int_out[0] !! Return-Wert
int_out+2 !! int_out[1] !! edit_obj
int_out+4 !! int_out[2] !! next_obj
int_out+6 !! int_out[3] !! edit_idx
!end_table

(!ende_liste)
!end_node
!end_node

!endif
