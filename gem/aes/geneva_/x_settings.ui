!iflang [english]

!begin_node x_settings

(!begin_liste) [Availability]

!item [Name:]
ØGeneva settingsÆ - Get or set Geneva's internal settings.

!item [Opcode:]
29056

!item [Syntax:]
int16_t x_settings ( int16_t getset, int16_t length, SETTINGS *user );

!item [Description:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [getset]
0 = Get, 1 = Set, -1 = Reset
!item [length]
length of bytes to get or set
!item [user]
Points to SETTINGS to get or set, or NULL
!end_xlist

(!B)0: Get(!b) (!nl)
Read length bytes (or the maximum length of the SETTINGS structure.) Setting
length to a negative number will read the whole structure, though this is
not recommended since future versions may expand the SETTINGS structure.

Example:
!begin_verbatim
SETTINGS set;
x_settings ( 0, sizeof(set), &set );
!end_verbatim


(!B)1: Set(!b) (!nl)
Set length bytes (or the maximum length of the SETTINGS structure.) Setting
length to a negative number will set the whole structure, though this is
not recommended since future versions may expand the SETTINGS structure.
The contents of user are not modified.

Example: Temporarily disable pulldowns:
!begin_verbatim
SETTINGS set;
x_settings ( 0, sizeof(set), &set ); /* get current        */
set.pulldown = 0;
x_settings ( 1, sizeof(set), &set ); /* turn off           */
...                                  /* do some stuff here */
set.pulldown = 1;
x_settings ( 1, sizeof(set), &set ); /* turn back on       */
!end_verbatim

(!B) -1: Reset(!b) (!nl)
Reset length bytes of the settings to their default values. If length is less
than zero, all of the settings will be reset. The user parameter can be NULL,
since it is not used.

!item [(!nolink [Return]) value:]
The function always returns 1.

!item [Availability:]
The function is only available under Geneva.

!item [Group:]
Geneva library

!item [See also:]
(!link [Binding] [Bindings for x_settings])

(!ende_liste)



!begin_node Bindings for x_settings
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_settings ( int16_t getset, int16_t length, SETTINGS *user );

!item [Binding:]
!begin_verbatim
int16_t x_settings ( int16_t getset, int16_t length, SETTINGS 
*user )
{
   int_in[0] = getset;
   int_in[1] = length;
   addr_in[0] = user;

   crys_if(29056);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 29056 # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 1     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! getset
int_in+2  !! int_in[1]  !! length
addr_in   !! addr_in[0] !! user
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node x_settings

(!begin_liste) [Beschreibung]

!item [Name:]
ØGeneva settingsÆ - Get or set Geneva's internal settings.

!item [AES-Nummer:]
29056

!item [Deklaration:]
int16_t x_settings ( int16_t getset, int16_t length, SETTINGS *user );

!item [Beschreibung:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [getset]
0 = Get, 1 = Set, -1 = Reset
!item [length]
length of bytes to get or set
!item [user]
Points to SETTINGS to get or set, or NULL
!end_xlist

(!B)0: Get(!b) (!nl)
Read length bytes (or the maximum length of the SETTINGS structure.) Setting
length to a negative number will read the whole structure, though this is
not recommended since future versions may expand the SETTINGS structure.

Example:
!begin_verbatim
SETTINGS set;
x_settings ( 0, sizeof(set), &set );
!end_verbatim


(!B)1: Set(!b) (!nl)
Set length bytes (or the maximum length of the SETTINGS structure.) Setting
length to a negative number will set the whole structure, though this is
not recommended since future versions may expand the SETTINGS structure.
The contents of user are not modified.

Example: Temporarily disable pulldowns:
!begin_verbatim
SETTINGS set;
x_settings ( 0, sizeof(set), &set ); /* get current        */
set.pulldown = 0;
x_settings ( 1, sizeof(set), &set ); /* turn off           */
...                                  /* do some stuff here */
set.pulldown = 1;
x_settings ( 1, sizeof(set), &set ); /* turn back on       */
!end_verbatim

(!B) -1: Reset(!b) (!nl)
Reset length bytes of the settings to their default values. If length is less
than zero, all of the settings will be reset. The user parameter can be NULL,
since it is not used.

!item [Ergebnis:]
Die Funktion liefert immer 1.

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva zur VerfÅgung.

!item [Gruppe:]
Geneva Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_settings])

(!ende_liste)



!begin_node Bindings fÅr x_settings
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_settings ( int16_t getset, int16_t length, SETTINGS *user );

!item [Umsetzung:]
!begin_verbatim
int16_t x_settings ( int16_t getset, int16_t length, SETTINGS
*user )
{
   int_in[0] = getset;
   int_in[1] = length;
   addr_in[0] = user;

   crys_if(29056);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 29056 # Opcode der Funktion
control+2 !! control[1] !! 2     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 1     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! getset
int_in+2  !! int_in[1]  !! length
addr_in   !! addr_in[0] !! user
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
