!iflang [english]

!begin_node proc_run

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Process run(!ldouble) - Run a process

!item [Opcode:]
61

!item [Syntax:]
int16_t proc_run ( int16_t pid, int16_t is_graphical, int16_t options,
                 int8_t *command, int8_t *tail );

!item [Description:]
The call proc_run launches a process previously created with proc_create.
The following apply:
!begin_xlist !compressed [is_graphical]
!item [pid]
Process ID previously returned by proc_create
!item [is_graphical]
Nonzero for a (!nolink [GEM]) program, zero for a DOS program
!item [options]
Special load options:
!begin_xlist [-1] !compressed
!item [3]
Program is a desk accessory
!item [4]
If this is a (!nolink [GEM]) program, its windows remain visible whichever program is in
the foreground; otherwise they are only visible when the program in question
is in the foreground
!item [-1]
If the (!I)gl_allwins(!i) flag is turned on, then behaves like type 4.
Otherwise behaves as default. (!nolink [GEM]) provides no option to turn this flag on
programmatically; you have to patch the (!nolink [AES]) by writing a nonzero value in
the byte that follows the marker 'zyxg' inside the binary (!nolink [AES]) file.
!end_xlist
!item [command]
Name of program to run
!item [tail]
Command tail to pass to it
!end_xlist

(!B)Note:(!b) The odd range of values passed to the load options is chosen for
compatibility with the (!I)isover(!i) flag of shel_write.

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned.

!item [Availability:]
The function is only available under (!nolink [GEM XM]) and FreeGEM/XM.

!item [Group:]
Process library

!item [See also:]
(!link [Binding] [Bindings for proc_run]) ~ proc_create ~ proc_info ~
proc_switch

(!ende_liste)



!begin_node Bindings for proc_run
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t proc_run ( int16_t pid, int16_t is_graphical, int16_t options,
                 int8_t *command, int8_t *tail );

!item [Binding:]
!begin_verbatim
int16_t proc_run (int16_t pid, int16_t is_graphical, int16_t options,
                 int8_t *command, int8_t *tail)
{
   int_in[0]  = pid;
   int_in[1]  = is_graphical;
   int_in[2]  = options;
   addr_in[0] = command;
   addr_in[1] = tail;

   return ( crys_if(61) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 61    # Function opcode
control+2 !! control[1] !! 3     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! pid
int_in+2  !! int_in[1]  !! is_graphical
int_in+4  !! int_in[2]  !! options
addr_in   !! addr_in[0] !! command
addr_in+4 !! addr_in[1] !! tail
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node proc_run

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Process run(!ldouble) - Run a process

!item [AES-Nummer:]
61

!item [Deklaration:]
int16_t proc_run ( int16_t pid, int16_t is_graphical, int16_t options,
                 int8_t *command, int8_t *tail );

!item [Beschreibung:]
The call proc_run launches a process previously created with proc_create.
The following apply:
!begin_xlist !compressed [is_graphical]
!item [pid]
Process ID previously returned by proc_create
!item [is_graphical]
Nonzero for a (!nolink [GEM]) program, zero for a DOS program
!item [options]
Special load options:
!begin_xlist [-1] !compressed
!item [3]
Program is a desk accessory
!item [4]
If this is a (!nolink [GEM]) program, its windows remain visible whichever program is in
the foreground; otherwise they are only visible when the program in question
is in the foreground
!item [-1]
If the (!I)gl_allwins(!i) flag is turned on, then behaves like type 4.
Otherwise behaves as default. (!nolink [GEM]) provides no option to turn this flag on
programmatically; you have to patch the (!nolink [AES]) by writing a nonzero value in
the byte that follows the marker 'zyxg' inside the binary (!nolink [AES]) file.
!end_xlist
!item [command]
Name of program to run
!item [tail]
Command tail to pass to it
!end_xlist

(!B)Note:(!b) The odd range of values passed to the load options is chosen for
compatibility with the (!I)isover(!i) flag of shel_write.

!item [Ergebnis:]
An error has arisen only if the value 0 is returned.

!item [Verf(!uumlaut)gbar:]
The function is only available under (!nolink [GEM XM]) and FreeGEM/XM.

!item [Gruppe:]
Prozessverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r proc_run]) ~ proc_create ~ proc_info ~
proc_switch

(!ende_liste)



!begin_node Bindings f(!uumlaut)r proc_run
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t proc_run ( int16_t pid, int16_t is_graphical, int16_t options,
                 int8_t *command, int8_t *tail );

!item [Umsetzung:]
!begin_verbatim
int16_t proc_run (int16_t pid, int16_t is_graphical, int16_t options,
                 int8_t *command, int8_t *tail)
{
   int_in[0]  = pid;
   int_in[1]  = is_graphical;
   int_in[2]  = options;
   addr_in[0] = command;
   addr_in[1] = tail;

   return ( crys_if(61) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 61    # Opcode der Funktion
control+2 !! control[1] !! 3     # Eintr(!aumlaut)ge in int_in
control+4 !! control[2] !! 1     # Eintr(!aumlaut)ge in int_out
control+6 !! control[3] !! 2     # Eintr(!aumlaut)ge in addr_in
control+8 !! control[4] !! 0     # Eintr(!aumlaut)ge in addr_out
int_in    !! int_in[0]  !! pid
int_in+2  !! int_in[1]  !! is_graphical
int_in+4  !! int_in[2]  !! options
addr_in   !! addr_in[0] !! command
addr_in+4 !! addr_in[1] !! tail
int_out   !! int_out[0] !! (!nolink [Return])-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
