!iflang [english]

!begin_node proc_switch

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Process switch(!ldouble) - Switch to process

!item [Opcode:]
66

!item [Syntax:]
int16_t proc_switch ( int16_t pr_swid );

!item [Description:]
The call proc_switch switches to process with the ID (!I)pr_swid(!i).

!item [(!nolink [Return]) value:]
Returns 0 if process is already the active process, else 1.

!item [Availability:]
This function is only available under (!nolink [GEM XM]) and FreeGEM/XM.

!item [Group:]
Process library

!item [See also:]
(!link [Binding] [Bindings for proc_switch]) ~ proc_create ~ proc_info ~
proc_run

(!ende_liste)



!begin_node Bindings for proc_switch
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t proc_switch ( int16_t pr_swid );

!item [Binding:]
!begin_verbatim
int16_t proc_switch (int16_t pr_swid)
{
   int_in[0]  = pr_swid;
   return ( crys_if(66) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 66    # Function opcode
control+2 !! control[1] !! 1     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! pr_swid
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node proc_switch

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Process switch(!ldouble) - Switch to process

!item [AES-Nummer:]
66

!item [Deklaration:]
int16_t proc_switch ( int16_t pr_swid );

!item [Beschreibung:]
The call proc_switch switches to process with the ID (!I)pr_swid(!i).

!item [Ergebnis:]
Returns 0 if process is already the active process, else 1.

!item [Verf(!uumlaut)gbar:]
This function is only available under (!nolink [GEM XM]) and FreeGEM/XM.

!item [Gruppe:]
Prozessverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r proc_switch]) ~ proc_create ~ proc_info ~
proc_run

(!ende_liste)



!begin_node Bindings f(!uumlaut)r proc_switch
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t proc_switch ( int16_t pr_swid );

!item [Umsetzung:]
!begin_verbatim
int16_t proc_switch (int16_t pr_swid)
{
   int_in[0]  = pr_swid;
   return ( crys_if(66) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 66    # Opcode der Funktion
control+2 !! control[1] !! 1     # Eintr(!aumlaut)ge in int_in
control+4 !! control[2] !! 1     # Eintr(!aumlaut)ge in int_out
control+6 !! control[3] !! 0     # Eintr(!aumlaut)ge in addr_in
control+8 !! control[4] !! 0     # Eintr(!aumlaut)ge in addr_out
int_in    !! int_in[0]  !! pr_swid
int_out   !! int_out[0] !! (!nolink [Return])-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
