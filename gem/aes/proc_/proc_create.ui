!iflang [english]

!begin_node proc_create

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Process create(!ldouble) - Create a new process

!item [Opcode:]
60

!item [Syntax:]
int16_t proc_create ( void *address, int32_t size, int16_t is_swap,
                 int16_t is_gem, int16_t *num );

!item [Description:]
The call proc_create allocates a new process ID but does not launch the
process. The following apply:
!begin_xlist !compressed [is_swap]
!item [address]
Channel address at which to load process
!item [size]
Space to allocate, or 0 to allocate maximum channel space
!item [is_swap]
Nonzero if the process can be swapped out, zero if it must stay paged in. The
(!nolink [GEM XM]) Desktop marks accessories as not to be paged out
!item [is_gem]
Nonzero if the process is a (!nolink [GEM]) application, zero for DOS application
!item [num]
Process ID of new process
!end_xlist

(!B)Note:(!b) Since (!nolink [GEM XM]) doesn't support having more than one newly-launched
process waiting around, the process with ID (!I)num(!i) must be launched through
proc_run before calling proc_create again.

!item [(!nolink [Return]) value:]
An error has arisen only if the value 0 is returned (no more ID available).

!item [Availability:]
This function is only available under (!nolink [GEM XM]) and FreeGEM/XM.

!item [Group:]
Process library

!item [See also:]
(!link [Binding] [Bindings for proc_create]) ~ proc_info ~ proc_run ~
proc_switch

(!ende_liste)



!begin_node Bindings for proc_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t proc_create ( void *address, int32_t size, int16_t is_swap,
                 int16_t is_gem, int16_t *num );

!item [Binding:]
!begin_verbatim
int16_t proc_create (void *address, int32_t size, int16_t is_swap,
                 int16_t is_gem, int16_t *num)
{
   int_in[0]  = is_swap;
   int_in[1]  = is_gem;
   addr_in[0] = address;
   addr_in[1] = size;

   crys_if(60);

   *num = int_out[1];
   
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 60    # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 2     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! is_swap
int_in+2  !! int_in[1]  !! is_gem
addr_in   !! addr_in[0] !! address
addr_in+4 !! addr_in[1] !! size
int_out   !! int_out[0] !! Return value
int_out+2 !! int_out[1] !! num
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node proc_create

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Process create(!ldouble) - Create a new process

!item [AES-Nummer:]
60

!item [Deklaration:]
int16_t proc_create ( void *address, int32_t size, int16_t is_swap,
                 int16_t is_gem, int16_t *num );

!item [Beschreibung:]
The call proc_create allocates a new process ID but does not launch the
process. The following apply:
!begin_xlist !compressed [is_swap]
!item [address]
Channel address at which to load process
!item [size]
Space to allocate, or 0 to allocate maximum channel space
!item [is_swap]
Nonzero if the process can be swapped out, zero if it must stay paged in. The
(!nolink [GEM XM]) Desktop marks accessories as not to be paged out
!item [is_gem]
Nonzero if the process is a (!nolink [GEM]) application, zero for DOS application
!item [num]
Process ID of new process
!end_xlist

(!B)Note:(!b) Since (!nolink [GEM XM]) doesn't support having more than one newly-launched
process waiting around, the process with ID (!I)num(!i) must be launched through
proc_run before calling proc_create again.

!item [Ergebnis:]
An error has arisen only if the value 0 is returned (no more ID available).

!item [Verf(!uumlaut)gbar:]
The function is only available under (!nolink [GEM XM]) and FreeGEM/XM.

!item [Gruppe:]
Prozessverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r proc_create]) ~ proc_run ~ proc_info ~
proc_switch

(!ende_liste)



!begin_node Bindings f(!uumlaut)r proc_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t proc_create ( void *address, int32_t size, int16_t is_swap,
                 int16_t is_gem, int16_t *num );

!item [Umsetzung:]
!begin_verbatim
int16_t proc_create (void *address, int32_t size, int16_t is_swap,
                 int16_t is_gem, int16_t *num)
{
   int_in[0]  = is_swap;
   int_in[1]  = is_gem;
   addr_in[0] = address;
   addr_in[1] = size;

   crys_if(60);

   *num = int_out[1];
   
   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 60    # Opcode der Funktion
control+2 !! control[1] !! 2     # Eintr(!aumlaut)ge in int_in
control+4 !! control[2] !! 2     # Eintr(!aumlaut)ge in int_out
control+6 !! control[3] !! 2     # Eintr(!aumlaut)ge in addr_in
control+8 !! control[4] !! 0     # Eintr(!aumlaut)ge in addr_out
int_in    !! int_in[0]  !! is_swap
int_in+2  !! int_in[1]  !! is_gem
addr_in   !! addr_in[0] !! address
addr_in+4 !! addr_in[1] !! size
int_out   !! int_out[0] !! (!nolink [Return])-Wert
int_out+2 !! int_out[1] !! num
!end_table

(!ende_liste)
!end_node
!end_node

!endif
