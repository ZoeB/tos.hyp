!iflang [english]

!begin_node x_graf_rast2rez

(!begin_liste) [Availability]

!item [Name:]
ØÆ -

!item [Opcode:]
28978

!item [Syntax:]
void x_graf_rast2rez( uint16_t *src_data, int32_t plane_len, int16_t old_planes,
MFDB *mfdb, int16_t devspef );

!item [Description:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [plane_len]
Size of one bitplane of data, in the dest. image, in bytes
!item [old_planes]
Number of bitplanes in the source data
!item [devspef]
If non-zero, the dest. image is in device-specific format. Otherwise,
it is in VDI format.
!item [src_data]
Pointer to the location of the source image's data.
!item [mfdb]
Pointer to the MFDB describing the dest. image.  All values must be correct,
including the fd_addr.
!end_xlist

This function will convert an image (in either VDI or device-specific format)
to a format which can be displayed in the current video mode. This includes
things like transforming a color image of fewer bitplanes than the current
video mode into an image that can be displayed using vro_cpyfm. If the source
is a monochrome image, it is much faster to simply use vrt_cpyfm to display it
and avoid x_graf_rast2rez completely.

All values in (!I)mfdb(!i) describe the destination image, except for fd_stand,
which describes the source image.

Example: Take the image described by (!I)source(!i), convert it to the current
video mode, and display it.
!begin_verbatim
MFDB source,                           /* assume this is already filled-in */
     dest,
     screen;
     int32_t dest_size;

     dest = source;                    /* most values are the same to start */
     dest.fd_nplanes = current_video_planes;
     dest_size = (long)dest.fd_nplanes * dest.fd_wdwidth*2 * dest.fd_h;
     dest.fd_addr = Malloc(dest_size);
     x_graf_rast2rez( source.fd_addr, (long)source.fd_wdwidth*2 * source.fd_h,
                      source.fd_nplanes, &dest, 1 );
     screen.fd_addr = 0L;
     vro_cpyfm( vdi_handle, MD_REPLACE, array, &dest, &screen );
!end_verbatim

!item [(!nolink [Return]) value:]
The function does not return a value.

!item [Availability:]
The function is only available under Geneva since Release 004.

!item [Group:]
Graphics library

!item [See also:]
(!link [Binding] [Bindings for x_graf_rast2rez])

(!ende_liste)



!begin_node Bindings for x_graf_rast2rez
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void x_graf_rast2rez( uint16_t *src_data, int32_t plane_len, int16_t old_planes,
MFDB *mfdb, int16_t devspef );

!item [Binding:]
!begin_verbatim
void x_graf_rast2rez( uint16_t *src_data, int32_t plane_len, int16_t old_planes,
                      MFDB *mfdb, int16_t devspef )
{
   int_in[0-1] = plane_len;
   int_in[2]   = old_planes;
   int_in[3]   = devspef;

   addr_in[0] = src_data;
   addr_in[1] = mfdb;

   crys_if(28978);

   return;
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 28978 # Function opcode
control+2 !! control[1] !! 4     # Entry in int_in
control+4 !! control[2] !! 0     # Entry in int_out
control+6 !! control[3] !! 2     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! plane_len
int_in+2  !! int_in[1]  !! plane_len
addr_in   !! addr_in[0] !! src_data
addr_in+4 !! addr_in[1] !! mfdb
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node x_graf_rast2rez

(!begin_liste) [Beschreibung]

!item [Name:]
ØÆ -

!item [AES-Nummer:]
28978

!item [Deklaration:]
void x_graf_rast2rez( uint16_t *src_data, int32_t plane_len, int16_t old_planes,
MFDB *mfdb, int16_t devspef );

!item [Beschreibung:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [plane_len]
Size of one bitplane of data, in the dest. image, in bytes
!item [old_planes]
Number of bitplanes in the source data
!item [devspef]
If non-zero, the dest. image is in device-specific format. Otherwise,
it is in VDI format.
!item [src_data]
Pointer to the location of the source image's data.
!item [mfdb]
Pointer to the MFDB describing the dest. image.  All values must be correct,
including the fd_addr.
!end_xlist

This function will convert an image (in either VDI or device-specific format)
to a format which can be displayed in the current video mode. This includes
things like transforming a color image of fewer bitplanes than the current
video mode into an image that can be displayed using vro_cpyfm. If the source
is a monochrome image, it is much faster to simply use vrt_cpyfm to display it
and avoid x_graf_rast2rez completely.

All values in (!I)mfdb(!i) describe the destination image, except for fd_stand,
which describes the source image.

Example: Take the image described by (!I)source(!i), convert it to the current
video mode, and display it.
!begin_verbatim
MFDB source,                           /* assume this is already filled-in */
     dest,
     screen;
     int32_t dest_size;

     dest = source;                    /* most values are the same to start */
     dest.fd_nplanes = current_video_planes;
     dest_size = (long)dest.fd_nplanes * dest.fd_wdwidth*2 * dest.fd_h;
     dest.fd_addr = Malloc(dest_size);
     x_graf_rast2rez( source.fd_addr, (long)source.fd_wdwidth*2 * source.fd_h,
                      source.fd_nplanes, &dest, 1 );
     screen.fd_addr = 0L;
     vro_cpyfm( vdi_handle, MD_REPLACE, array, &dest, &screen );
!end_verbatim

!item [Ergebnis:]
Die Funktion liefert keinen Wert.

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva seit Release 004 zur VerfÅgung.

!item [Gruppe:]
Grafikfunktionen

!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_graf_rast2rez])

(!ende_liste)



!begin_node Bindings fÅr x_graf_rast2rez
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
void x_graf_rast2rez( uint16_t *src_data, int32_t plane_len, int16_t old_planes,
MFDB *mfdb, int16_t devspef );

!item [Umsetzung:]
!begin_verbatim
void x_graf_rast2rez( uint16_t *src_data, int32_t plane_len, int16_t old_planes,
                      MFDB *mfdb, int16_t devspef )
{
   int_in[0-1] = plane_len;
   int_in[2]   = old_planes;
   int_in[3]   = devspef;

   addr_in[0] = src_data;
   addr_in[1] = mfdb;

   crys_if(28978);

   return;
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 28978 # Opcode der Funktion
control+2 !! control[1] !! 4     # EintrÑge in int_in
control+4 !! control[2] !! 0     # EintrÑge in int_out
control+6 !! control[3] !! 2     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! plane_len
int_in+2  !! int_in[1]  !! plane_len
addr_in   !! addr_in[0] !! src_data
addr_in+4 !! addr_in[1] !! mfdb
!end_table

(!ende_liste)
!end_node
!end_node

!endif
