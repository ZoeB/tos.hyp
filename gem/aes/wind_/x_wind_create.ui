!iflang [english]

!begin_node x_wind_create

(!begin_liste) [Availability]

!item [Name:]
ØWindow createÆ - Initializes a new window, extended version

!item [Opcode:]
29011

!item [Syntax:]
int16_t x_wind_create ( int16_t wi_crkind, int16_t wi_xkind, int16_t wi_crwx,
                      int16_t wi_crwy, int16_t wi_crww, int16_t wi_crwh );

!item [Description:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [wi_crkind]
Window type (ala wind_create)
!item [wi_xkind]
Extended window type:
!label X_MENU
!label X_HSPLIT
!label X_VSPLIT
!begin_table [l|l|l]
Element !! Value !! Meaning
!hline
X_MENU        !! 0x0001 !!  ~
X_HSPLIT      !! 0x0002 !!  ~
X_VSPLIT      !! 0x0004 !!  ~
!end_table
!item [wi_crwx]
Window x-coordinate
!item [wi_crwy]
Window y-coordinate
!item [wi_crww]
Window width
!item [wi_crwh]
Window height
!end_xlist

If you wish to use new or extended functions such as the X_MENU or split
window attributes, then x_wind_create must be used to create these
windows.

!item [(!nolink [Return]) value:]
0 = An error occurred

!item [Availability:]
The function is only available under Geneva.

!item [Group:]
Window library

!item [See also:]
(!link [Binding] [Bindings for x_wind_create]) ~ wind_delete

(!ende_liste)



!begin_node Bindings for x_wind_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_wind_create ( int16_t wi_crkind, int16_t wi_xkind, int16_t wi_crwx,
                      int16_t wi_crwy, int16_t wi_crww, int16_t wi_crwh );

!item [Binding:]
!begin_verbatim
int16_t x_wind_create ( int16_t wi_crkind, int16_t wi_xkind,
int16_t wi_crwx, int16_t wi_crwy, int16_t wi_crww, int16_t
wi_crwh )
{
   int_in[0]  = wi_crkind;
   int_in[1]  = wi_xkind;
   int_in[2]  = wi_crwx;
   int_in[3]  = wi_crwy;
   int_in[4]  = wi_crww;  
   int_in[5]  = wi_crwh;

   crys_if(29011);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 29011 # Function opcode
control+2 !! control[1] !! 6     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 0     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! wi_crkind
int_in+2  !! int_in[1]  !! wi_xkind
int_in+4  !! int_in[2]  !! wi_crwx
int_in+6  !! int_in[3]  !! wi_crwy
int_in+8  !! int_in[4]  !! wi_crww
int_in+10 !! int_in[5]  !! wi_crwh
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node x_wind_create

(!begin_liste) [Beschreibung]

!item [Name:]
ØWindow createÆ - meldet ein neues Fenster an, erweiterte Version

!item [AES-Nummer:]
29011

!item [Deklaration:]
int16_t x_wind_create ( int16_t wi_crkind, int16_t wi_xkind, int16_t wi_crwx,
                      int16_t wi_crwy, int16_t wi_crww, int16_t wi_crwh );

!item [Beschreibung:]
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [wi_crkind]
Fenster Komponenten (wie wind_create)
!item [wi_xkind]
Extended window type:
!label X_MENU
!label X_HSPLIT
!label X_VSPLIT
!begin_table [l|l|l]
Komponente !! Wert !! Bedeutung
!hline
X_MENU        !! 0x0001 !!  ~
X_HSPLIT      !! 0x0002 !!  ~
X_VSPLIT      !! 0x0004 !!  ~
!end_table
!item [wi_crwx]
Window x-coordinate
!item [wi_crwy]
Window y-coordinate
!item [wi_crww]
Window width
!item [wi_crwh]
Window height
!end_xlist

If you wish to use new or extended functions such as the X_MENU or split
window attributes, then x_wind_create must be used to create these
windows.

!item [Ergebnis:]
0 = An error occurred

!item [VerfÅgbar:]
Die Funktion steht nur unter Geneva zur VerfÅgung.

!item [Gruppe:]
Fensterverwaltung

!item [Querverweis:]
(!link [Binding] [Bindings fÅr x_wind_create]) ~ wind_delete

(!ende_liste)



!begin_node Bindings fÅr x_wind_create
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t x_wind_create ( int16_t wi_crkind, int16_t wi_xkind, int16_t wi_crwx,
                      int16_t wi_crwy, int16_t wi_crww, int16_t wi_crwh );

!item [Umsetzung:]
!begin_verbatim
int16_t x_wind_create ( int16_t wi_crkind, int16_t wi_xkind,
int16_t wi_crwx, int16_t wi_crwy, int16_t wi_crww, int16_t
wi_crwh )
{
   int_in[0]  = wi_crkind;
   int_in[1]  = wi_xkind;
   int_in[2]  = wi_crwx;
   int_in[3]  = wi_crwy;
   int_in[4]  = wi_crww;  
   int_in[5]  = wi_crwh;

   crys_if(29011);

   return ( int_out[0] );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 29011 # Opcode der Funktion
control+2 !! control[1] !! 6     # EintrÑge in int_in
control+4 !! control[2] !! 1     # EintrÑge in int_out
control+6 !! control[3] !! 0     # EintrÑge in addr_in
control+8 !! control[4] !! 0     # EintrÑge in addr_out
int_in    !! int_in[0]  !! wi_crkind
int_in+2  !! int_in[1]  !! wi_xkind
int_in+4  !! int_in[2]  !! wi_crwx
int_in+6  !! int_in[3]  !! wi_crwy
int_in+8  !! int_in[4]  !! wi_crww
int_in+10 !! int_in[5]  !! wi_crwh
int_out   !! int_out[0] !! Return-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
