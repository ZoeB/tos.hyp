!iflang [english]

!begin_node prop_get

(!begin_liste) [Availability]

!item [Name:]
(!rdouble)Property get(!ldouble) - Read setting from the (!nolink [GEM])
configuration file.

!item [Opcode:]
1010

!item [Syntax:]
int16_t prop_get ( int8_t *program, int8_t *section, int8_t *buffer,
int16_t buflen, int16_t options );

!item [Description:]
The call prop_get serves for reading settings from the global settings file of
the (!nolink [AES]). The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [program]
Name that identifies the program. It should be formed of one or more words
separated by dots - for example, the DEMO sample uses "PTK.DEMO".
!item [section]
Name of the field to retrieve. Again, this should be one or more words
separated by dots. DEMO uses "Pen.shade", "Pen.colour" and "Pen.size".
!item [buffer]
Address of the buffer to which the information will be written.
!item [buflen]
(!nolink [Size]) of (!I)buffer(!i), including the terminating 0.
!item [options]
Current user (0) or all users (1). Use 0 if possible although multiple user
profiles is not yet supported.
!end_xlist

!item [(!nolink [Return]) value:]
~0 = Property read successfully (!nl)
~1 = Property was not found (!nl)
-1 = File I/O error (!nl)
-2 = Not enough memory



!item [Availability:]
This call is a compile-time option in recent FreeGEM versions. To check for
this feature, use appl_init(xbuf) and check that bit 1 of xbuf.abilities is
set (ABLE_PROP).

!item [Group:]
Property library

!item [See also:]
(!link [Binding] [Bindings for prop_get]) ~ prop_del ~ prop_put

(!ende_liste)



!begin_node Bindings for prop_get
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t prop_get ( int8_t *program, int8_t *section, int8_t *buffer,
                   int16_t buflen, int16_t options );

!item [Binding:]
!begin_verbatim
int16_t prop_get (int8_t *program, int8_t *section, int8_t *buffer,
                  int16_t buflen, int16_t options )
{
   int_in[0]  = options;
   int_in[1]  = buflen;
   addr_in[0] = program;
   addr_in[1] = section;
   addr_in[2] = buffer;

   return ( crys_if(1010) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Address !! Element !! (!nolink [Contents])
!hline
control   !! control[0] !! 1010  # Function opcode
control+2 !! control[1] !! 2     # Entry in int_in
control+4 !! control[2] !! 1     # Entry in int_out
control+6 !! control[3] !! 3     # Entry in addr_in
control+8 !! control[4] !! 0     # Entry in addr_out
int_in    !! int_in[0]  !! options
int_in+2  !! int_in[1]  !! buflen
addr_in   !! addr_in[0] !! program
addr_in+4 !! addr_in[1] !! section
addr_in+8 !! addr_in[2] !! buffer
int_out   !! int_out[0] !! Return value
!end_table

(!ende_liste)
!end_node
!end_node

!else

!begin_node prop_get

(!begin_liste) [Beschreibung]

!item [Name:]
(!rdouble)Property get(!ldouble) - Read setting from the (!nolink [GEM])
configuration file.

!item [AES-Nummer:]
1010

!item [Deklaration:]
int16_t prop_get ( int8_t *program, int8_t *section, int8_t *buffer,
int16_t buflen, int16_t options );

!item [Beschreibung:]
The call prop_get serves for reading settings from the global settings file of
the (!nolink [AES]). The following apply:

!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [program]
Name that identifies the program. It should be formed of one or more words
separated by dots - for example, the DEMO sample uses "PTK.DEMO".
!item [section]
Name of the field to retrieve. Again, this should be one or more words
separated by dots. DEMO uses "Pen.shade", "Pen.colour" and "Pen.size".
!item [buffer]
Address of the buffer to which the information will be written.
!item [buflen]
(!nolink [Size]) of (!I)buffer(!i), including the terminating 0.
!item [options]
Current user (0) or all users (1). Use 0 if possible although multiple user
profiles is not yet supported.
!end_xlist

!item [Ergebnis:]
~0 = Property read successfully (!nl)
~1 = Property was not found (!nl)
-1 = File I/O error (!nl)
-2 = Not enough memory

!item [Verf(!uumlaut)gbar:]
This call is a compile-time option in recent FreeGEM versions. To check for
this feature, use appl_init(xbuf) and check that bit 1 of xbuf.abilities is
set (ABLE_PROP).

!item [Gruppe:]
Eigenschaft-Funktionen

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r prop_get]) ~ prop_del ~ prop_put

(!ende_liste)



!begin_node Bindings f(!uumlaut)r prop_get
!ignore_index

(!begin_liste) [GEM-Arrays]

!item [C:]
int16_t prop_get ( int8_t *program, int8_t *section, int8_t *buffer,
                   int16_t buflen, int16_t options );

!item [Umsetzung:]
!begin_verbatim
int16_t prop_get (int8_t *program, int8_t *section, int8_t *buffer, 
                  int16_t buflen, int16_t options )
{
   int_in[0]  = options;
   int_in[1]  = buflen;
   addr_in[0] = program;
   addr_in[1] = section;
   addr_in[2] = buffer;

   return ( crys_if(1010) );
}
!end_verbatim

!item [GEM-Arrays:]
!begin_table [l l l]
Adresse !! Feldelement !! Belegung
!hline
control   !! control[0] !! 1010  # Opcode der Funktion
control+2 !! control[1] !! 2     # Eintr(!aumlaut)ge in int_in
control+4 !! control[2] !! 1     # Eintr(!aumlaut)ge in int_out
control+6 !! control[3] !! 3     # Eintr(!aumlaut)ge in addr_in
control+8 !! control[4] !! 0     # Eintr(!aumlaut)ge in addr_out
int_in    !! int_in[0]  !! options
int_in+2  !! int_in[1]  !! buflen
addr_in   !! addr_in[0] !! program
addr_in+4 !! addr_in[1] !! section
addr_in+8 !! addr_in[2] !! buffer
int_out   !! int_out[0] !! (!nolink [Return])-Wert
!end_table

(!ende_liste)
!end_node
!end_node

!endif
