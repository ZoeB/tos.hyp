!iflang [english]

!begin_node Fseek64
(!begin_liste) [Availability]
!item [Name:]
(!rdouble)file seek(!ldouble) - Move 64-bit file position pointer.

!item [Opcode:]
332 (0x014c)

!item [Syntax:]
int32_t Fseek64 ( int32_t hioffset, uint32_t lowoffset, int16_t handle, int16_t seekmode, int64_t *newpos );

!item [Description:]
The (!nolink [GEMDOS]) routine Fseek64 permits the file pointer to be moved to
a new position within a file. The following apply:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Meaning
!item [~]
~
!item [hioffset]
Upper 32 bits of the int64_t number of bytes that are to be skipped
!item [lowoffset]
Lower 32 bits of the int64_t number of bytes that are to be skipped
!item [handle]
(!nolink [GEMDOS]) file handle
!item [seekmode]
Type of repositioning:
!begin_xlist !compressed [0 =]
!item [0 =]
From start of file
!item [1 =]
From current position
!item [2 =]
From end of file
!end_xlist
!item [newpos]
The 64-bit value pointed to by (!I)newpos(!i) is set to the new position if
successful

!end_xlist
(!B)Note:(!b) Applied to (!nolink [pipes]) the function returns the value
EACCDN; this way applications can differentiate between devices and pipes.

(!B)Note:(!b) At the moment Fseek64() is only a wrapper around Fseek() as
there is no 64bit XFS/XDD support. If the specified offset is greater than
2147483647L (2^31-1), the call fails and returns EBADARG.

!item [(!nolink [Return]) value:]
The function returns a positive value of the new absolute location of the
file pointer from the start of the file, or a negative error-message.

!item [Availability:]
This function is available as of FreeMiNT 1.15.10.

!item [Group:]
File functions

!item [See also:]
(!link [Binding][Bindings for Fseek64]) ~ Fread ~ Fseek ~ Fwrite ~
(!link [Test for pipes][Pipes, Test for])
(!ende_liste)


!begin_node Bindings for Fseek64
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fseek64 ( int32_t hioffset, uint32_t lowoffset, int16_t handle, int16_t seekmode, int64_t *newpos );

!item [Assembler:]
!begin_verbatim
pea       newpos          ; Offset 14
move.w    seekmode,-(sp)  ; Offset 12
move.w    handle,-(sp)    ; Offset 10
move.l    lowoffset,-(sp) ; Offset 6
move.l    hioffset,-(sp)  ; Offset 2
move.w    #332,-(sp)      ; Offset 0
trap      #1              ; GEMDOS
lea       $12(sp),sp      ; Correct stack
!end_verbatim

!item [GFA-Basic]
Fehler%=Gemdos(&H14C,L:hioffset%,L:lowoffset%,W:handle%,W:seekmode%,L:newpos%)
(!ende_liste)
!end_node
!end_node

!else

!begin_node Fseek64
(!begin_liste) [Beschreibung]
!item [Name:]
(!rdouble)file seek(!ldouble) - 64 bit Dateiposition verschieben.

!item [Gemdosnummer:]
332 (0x014c)

!item [Deklaration:]
int32_t Fseek64 ( int32_t hioffset, uint32_t lowoffset, int16_t handle, int16_t seekmode, int64_t *newpos );

!item [Beschreibung:]
Die GEMDOS-Routine Fseek64 erlaubt es, den Dateizeiger innerhalb einer Datei
neu zu positionieren. Es gilt:
!begin_xlist !compressed [Parameter]
!item [Parameter]
Bedeutung
!item [~]
~
!item [hioffset]
Anzahl der Bytes, die (!uumlaut)bersprungen werden sollen (high)
!item [lowoffset]
Anzahl der Bytes, die (!uumlaut)bersprungen werden sollen (low)
!item [handle]
Dateikennung
!item [seekmode]
Art der Positionierung
!begin_xlist !compressed [0 =]
!item [0 =]
vom Dateianfang
!item [1 =]
ab aktueller Position
!item [2 =]
vom Dateiende
!end_xlist
!item [newpos]
Neue Position
!end_xlist
(!B)Hinweis:(!b) Auf (!nolink [Pipes]) angewandt liefert die Funktion den
Wert EACCDN; damit k(!oumlaut)nnen Applikationen Ger(!aumlaut)te und Pipes unterscheiden.

(!B)Hinweis:(!b) At the moment Fseek64() is only a wrapper around Fseek() as
there is no 64bit XFS/XDD support. If the specified offset is greater than
2147483647L (2^31-1), the call fails and returns EBADARG.

!item [Ergebnis:]
Die Funktion liefert als positives Ergebnis die neue Position innerhalb der
Datei, oder eine negative Fehlermeldung.

!item [Verf(!uumlaut)gbar:]
Sie steht ab FreeMiNT 1.15.10 zur Verf(!uumlaut)gung.

!item [Gruppe:]
Dateifunktionen

!item [Querverweis:]
(!link [Binding] [Bindings f(!uumlaut)r Fseek64]) ~ Fread ~ Fseek ~ Fwrite ~
(!link [Test auf Pipes][Pipes, Test auf])
(!ende_liste)


!begin_node Bindings f(!uumlaut)r Fseek64
!ignore_index
(!begin_liste) [Assembler:]
!item [C:]
int32_t Fseek64 ( int32_t hioffset, uint32_t lowoffset, int16_t handle, int16_t seekmode, int64_t *newpos );

!item [Assembler:]
!begin_verbatim
pea       newpos          ; Offset 14
move.w    seekmode,-(sp)  ; Offset 12
move.w    handle,-(sp)    ; Offset 10
move.l    lowoffset,-(sp) ; Offset 6
move.l    hioffset,-(sp)  ; Offset 2
move.w    #332,-(sp)      ; Offset 0
trap      #1              ; GEMDOS aufrufen
lea       $12(sp),sp      ; Stack korrigieren
!end_verbatim

!item [GFA-Basic]
Fehler%=Gemdos(&H14C,L:hioffset%,L:lowoffset%,W:handle%,W:seekmode%,L:newpos%)
(!ende_liste)
!end_node
!end_node

!endif
